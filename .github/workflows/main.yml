name: Module Builder

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      release-notes: ${{ steps.set-release-notes.outputs.release-notes }}
    steps:
      - uses: actions/checkout@v4

      - name: Set Release Notes for Github
        id: set-release-notes-github
        run: |
          echo "HUGE update, marking as version 2.0." >> release_notes.txt
          echo "- V13 Compatability (Still will need to wait on Sequencer's update to V13 to test)" >> release_notes.txt
          echo "- Emotes can now be re-ordered via drag and drop." >> release_notes.txt
          echo "- New menu for hiding emotes, any emote can now be hidden on a per user basis." >> release_notes.txt
          echo "- You now have the ability to register and add your own custom emotes! Custom macro creation functionality is limited to GMs, but players will have access to play all custom emotes. These emotes will be displayed in a list where you can edit or remove them as you wish. In the macro text editor, you have access to the token object as token. All custom emotes are also registered in the api and can be accessed there." >> release_notes.txt
          echo "release-notes-github<<EOF" >> $GITHUB_ENV
          cat release_notes.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get Version from Commit Message
        id: get-version
        run: |
          version=$(git log -1 --pretty=%B | grep -o -E '[v]?[0-9]+\.[0-9]+\.[0-9]+' | sed 's/^v//')
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "Extracted version: $version"

      - name: Update module.json with Version
        run: node update-module.js ${{ steps.get-version.outputs.version }}

      - name: Zip Files
        working-directory: ./
        run: zip -r ./module.zip ./*

      - name: Create Release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: Release ${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false
          body: ${{ env.release-notes-github }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './module.zip, ./module.json'
          tag: ${{ steps.get-version.outputs.version }}

      - name: Release Foundry Package
        run: |
          curl -X POST "https://api.foundryvtt.com/_api/packages/release_version" \
          -H "Content-Type: application/json" \
          -H "Authorization: ${{ secrets.FOUNDRY_API_TOKEN }}" \
          -d '{
            "id": "'"gambitsEmoteBar"'",
            "release": {
              "version": "'"${{ steps.get-version.outputs.version }}"'",
              "manifest": "'"https://github.com/gambit07/gambitsEmoteBar/releases/download/${{ steps.get-version.outputs.version }}/module.json"'",
              "download": "'"https://github.com/gambit07/gambitsEmoteBar/releases/download/${{ steps.get-version.outputs.version }}/module.zip"'",
              "notes": "'"https://github.com/gambit07/gambitsEmoteBar/releases/tag/${{ steps.get-version.outputs.version }}"'",
              "compatibility": {
                "minimum": "'"12.328"'",
                "verified": "'"12"'",
                "maximum": "'"12"'"
              }
            }
          }'